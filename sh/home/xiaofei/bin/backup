#!/bin/sh -f

#set -x

curdir="$(pwd)"
BACKUP_DIR="backup"

flist_name(){
	echo "$curdir/flist"
}

gen_flist(){
	local FLIST="$(flist_name)"
	
	cat > "$FLIST" << EOF
/home/xiaofei/.pythonrc.py
/home/xiaofei/bin/yd
/home/xiaofei/bin/add_android_repo
/home/xiaofei/bin/add_win_share
/home/xiaofei/bin/add_android_src
/home/xiaofei/bin/backup
/home/xiaofei/bin/tags.sh
/home/xiaofei/bin/git-diffall
/home/xiaofei/bin/my_env
/home/xiaofei/bin/add_win_tmp
/home/xiaofei/bin/eclipse
/home/xiaofei/bin/repo
/home/xiaofei/.vim/plugin/jsbeautify.vim
/home/xiaofei/.vim/plugin/omnicppcomplete.vim
/home/xiaofei/.vim/plugin/ctags.vim
/home/xiaofei/.vim/plugin/my_habit.vim
/home/xiaofei/.vim/plugin/wintagexplorer.vim
/home/xiaofei/.vim/plugin/binder_wm_tlist.vim
/home/xiaofei/.vim/plugin/winfileexplorer.vim
/home/xiaofei/.vim/plugin/winmanager.vim
/home/xiaofei/.vim/plugin/cscope_maps.vim
/home/xiaofei/.vim/plugin/taglist.vim
/home/xiaofei/.vim/indent/html.vim
/home/xiaofei/.vim/indent/javascript.vim
/home/xiaofei/.vim/doc/omnicppcomplete.txt
/home/xiaofei/.vim/doc/tags
/home/xiaofei/.vim/doc/winmanager.txt
/home/xiaofei/.vim/doc/taglist.txt
/home/xiaofei/.vim/autoload/omni/common/utils.vim
/home/xiaofei/.vim/autoload/omni/common/debug.vim
/home/xiaofei/.vim/autoload/omni/cpp/utils.vim
/home/xiaofei/.vim/autoload/omni/cpp/complete.vim
/home/xiaofei/.vim/autoload/omni/cpp/namespaces.vim
/home/xiaofei/.vim/autoload/omni/cpp/maycomplete.vim
/home/xiaofei/.vim/autoload/omni/cpp/tokenizer.vim
/home/xiaofei/.vim/autoload/omni/cpp/includes.vim
/home/xiaofei/.vim/autoload/omni/cpp/settings.vim
/home/xiaofei/.vim/autoload/omni/cpp/items.vim
/home/xiaofei/.vim/after/ftplugin/cpp.vim
/home/xiaofei/.vim/after/ftplugin/c.vim
/home/xiaofei/.bashrc
/home/xiaofei/.android_grep.sh
/home/xiaofei/eclipse.desktop
EOF
}

del_flist(){
	local FLIST="$(flist_name)"
	rm "$FLIST"
}

backup_flist(){
	echo "backup_flist $1"

	local DST_DIR="$1"
	gen_flist
	if [ ! -r "$(flist_name)" ]; then
		echo "backup_flist: no file list"
		exit 1
	fi

	while read line
	do
		if [ -z "$line" -o "${line:0:1}" == "#" ]; then
			echo "ignore ${line:1}"
			continue
		fi
		sudo rsync -aR "$line" "$DST_DIR/"
	done < "$(flist_name)"

	del_flist
}

recovery_flist(){
	echo "recovery_flist $1"

	local SRC_DIR="$1"

	gen_flist
	if [ ! -r "$(flist_name)" ]; then
		echo "backup_flist: no file list"
		exit 1
	fi

	while read line
	do
		if [ -z "$line" ]; then
			continue
		fi

		if [ "${line:0:1}" == "#" ]; then
			echo "ignore ${line:1}"
			continue
		fi

		if [ ! -r "$SRC_DIR/.$line" ]; then
			echo "no files: $SRC_DIR/.$line"
			continue
		fi

		sudo rsync -aR "$SRC_DIR/.$line" "/"
	done < "$(flist_name)"

	del_flist
}

compress_files(){
	echo "compress_files: $1"
	if [ ! -d "$1" ]; then
		echo "compress_files: *$1"
		exit 1
	fi
	
	local SRC_DIR="$1"
	
	tar Jcf "$(date +%Y%m%d%H%M%S)-$(uname -i)_backup.xz" -C "$SRC_DIR" ./

	sudo rm -rf "$SRC_DIR"
}

uncompress_files(){
	echo "uncompress_files $1 $2"
	if [ -z "$1" -o ! -f "$2" ]; then
		echo "uncompress_files: *$1*$2"
		exit 1
	fi

	local DST_DIR="$1"
	local TAR_BALL="$2"

	sudo rm -rf "$DST_DIR"
	mkdir -p "$DST_DIR"

	tar Jxf "$TAR_BALL" -C "$DST_DIR"
}

print_help(){
	echo "Usages:"
	echo "$0 [option]"
	echo "[option] can be this:"
	echo "	copy_compress			:copy to tarball"
	echo "	uncompress_recovery tarball	:recovery from tarball"
	echo "	copy				:copy"
	echo "	recovery			:recovery"
}

main(){
	echo "main $1"

	case $1 in
		"copy_compress")
		backup_flist "$curdir/$BACKUP_DIR"
		compress_files "$curdir/$BACKUP_DIR"
		;;

		"uncompress_recovery")
		shift
		uncompress_files "$curdir/$BACKUP_DIR" "$1"
		recovery_flist "$curdir/$BACKUP_DIR"
		rm -rf "$curdir/$BACKUP_DIR"
		;;

		"copy")
		backup_flist "$curdir"
		;;

		"recovery")
		shift
		recovery_flist "$curdir"
		;;

		*)
		print_help
		;;
	esac
}

main $*
